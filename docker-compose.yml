version: '3.3'

services: 
    dump-scheduler-services:
        restart: always
        image: dump-scheduler-services:latest
        container_name: dump-scheduler-services
        networks: 
            - app-network
        environment: 
            APP_PORT: ${DUMP_SCHD_PORT}
            DB_USERNAME: ${MYSQL_USER}
            DB_PASSWORD: ${MYSQL_PASSWORD}
            DB_NAME: ${DB_SCHEMA}
            DB_HOST: ${DB_HOST}
            DB_PORT: ${MYSQL_INT_PORT}
            
            NEO4J_HOST: ${NEO4J_HOST}
            NEO4J_USERNAME: ${NEO4J_USERNAME}
            NEO4J_PASSWORD: ${NEO4J_PASSWORD}
            SQL_BACKUP_FILE: ${SQL_BACKUP_FILE}

            AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
            SECRET_ACCESS_KEY_ID: ${SECRET_ACCESS_KEY_ID}
            S3_BUCKET_NAME: ${S3_BUCKET_NAME}

            SCHDULE_INTERVAL: ${SCHDULE_INTERVAL}
            # every hour: 0 0 * * * *
            # every day night 12: 0 0 0 * * *
            BACKUP_ARCHIVE: ${BACKUP_ARCHIVE}
            LOG_FILE_PATH: ${LOG_FILE_PATH} 
        depends_on: 
            - mysql 
            - neo4j
        ports:
            - "8082:8082"
        volumes: 
           # - ${SQL_BACKUP_FILE}:/home/usr/app/${SQL_BACKUP_FILE}
           #- ${NEO4J_BACKUP_FILE}:/home/usr/app/${NEO4J_BACKUP_FILE}
            - ${BACKUP_ARCHIVE}:/home/usr/app/${BACKUP_ARCHIVE}
            - ${LOG_FILE_PATH}:/home/usr/app/${LOG_FILE_PATH}
            - type: volume
              source: neo4j
              target: /home/usr/app/neo4j

    mysql:
        image: mysql:5.7
        restart: always
        environment:
            MYSQL_DATABASE: ${DB_SCHEMA}
            # So you don't have to use root, but you can if you like
            MYSQL_USER: ${MYSQL_USER}
            # You can use whatever password you like
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            # Password for root access
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        ports:
            # <Port exposed> : < MySQL Port running inside container>
             - "${MYSQL_EXT_PORT}:${MYSQL_INT_PORT}"
          # expose:
          #   # Opens port ${MYSQL_PORT} on the container
          #   - "${MYSQL_PORT}"
      
      
            # Where our data will be persisted
        volumes:
            - ./mysql/my-db:/var/lib/mysql
        networks:
            - app-network

    neo4j:
        container_name: Neo4j-test
        image: neo4j:3.5.14
        volumes:
            # - ./neo4j/data:/data
            # - neo4j:/data
            # - neo4j:/plugins
            - neo4j:/import
        ports:
            - "7474:7474"
            - "7687:7687"
        environment:
            - NEO4J_apoc_export_file_enabled=true
            - NEO4J_apoc_import_file_enabled=true
            - NEO4J_dbms_security_procedures_unrestricted=apoc.*,algo.*
            - NEO4J_dbms_security_procedures_whitelist=apoc.*,algo.*
            - NEO4J_dbms_memory_heap_initial__size=512m
            - NEO4J_dbms_memory_heap_max__size=2G
            - NEO4J_apoc_uuid_enabled=true
            - NEO4J_dbms_default__listen__address=0.0.0.0
            # - NEO4J_dbms_allow__upgrade=true
            - NEO4J_dbms_default__database=${NEO4J_DATABASE}
            - NEO4JLABS_PLUGINS=["apoc", "graph-algorithms"]
            - NEO4J_dbms_shell_enabled=true
            - NEO4J_AUTH=${NEO4J_USERNAME}/${NEO4J_PASSWORD}
            - NEO4J_apoc_import_file_use__neo4j__config=false
        networks: ["app-network"]
        restart: unless-stopped

networks:
    app-network:
        driver: bridge
volumes:
    neo4j:     